var createjs,Graphics,Game,g;(function(n){var u=function(){function n(){document.body.onkeydown=function(t){var i,r;t=t||window.event,i=t.charCode||t.keyCode,console.log("key pressed. "),console.log(n.keyBindings),r=n.keyBindings[""+i],r(),i===37&&alert("Hi")}}return n.prototype.bind=function(t,i){n.keyBindings[t]=i,console.log(n.keyBindings)},n.keyBindings={},n}(),t,i,r;n.TetrisRoot=u,t=function(){function n(){createjs.Ticker.setInterval(200),createjs.Ticker.setFPS(2),createjs.Ticker.useRAF=!0}return n.pause=function(){var n=!createjs.Ticker.getPaused();createjs.Ticker.setPaused(n)},n.prototype.setCallback=function(n){createjs.Ticker.addListener(n)},n}(),n.TetrisTimer=t,i=function(){function n(){this.stage=new createjs.Stage("tetris")}return n.prototype.place=function(){},n.prototype.addChild=function(n){this.stage.addChild(n)},n.prototype.removeChild=function(n){this.stage.removeChild(n)},n.prototype.update=function(){this.stage.update()},n.prototype.unplace=function(){},n.prototype.remove=function(){},n}(),n.TetrisCanvas=i,r=function(){function n(n,t,i,r,u,f){this.rect=new createjs.Shape,this.rect.graphics.beginFill(f).drawRect(t,i,r,u),this.canvas=n,this.canvas.addChild(this.rect),this.canvas.update()}return n.prototype.move=function(n,t){this.rect.x+=n,this.rect.y+=t},n.prototype.remove=function(){this.canvas.removeChild(this.rect)},n}(),n.TetrisRect=r})(Graphics||(Graphics={})),function(n){var i=function(){function n(n,t){this.base_position=[5,0],this.moved=!0,this.all_rotations=n,this.rotation_index=0,this.color="Red",this.base_position=[5,0],this.board=t,this.moved=!0}return n.prototype.current_rotation=function(){return this.all_rotations[this.rotation_index]},n.prototype.dropByOne=function(){return this.moved=this.move(0,1,0),this.moved},n.prototype.move=function(n,t,i){var u,r,f;for(this.moved=!0,u=this.all_rotations[(this.rotation_index+i)%this.all_rotations.length],r=0;r<u.length;++r)f=u[r],this.board.emptyAt([f[0]+n+this.base_position[0],f[1]+t+this.base_position[1]])&&(this.moved=!1);return this.moved&&(this.base_position[0]+=n,this.base_position[1]+=t,this.rotation_index=(this.rotation_index+i)%this.all_rotations.length),this.moved},n.rotations=function(){},n.next_piece=function(t){return new n(this.All_Pieces[0],t)},n.All_Pieces=[[[[0,0],[1,0],[0,1],[1,1]]]],n.AllColors=["DarkGreen","dark blue","dark red","gold2","Purple3","OrangeRed2","LightSkyBlue"],n}(),t,r;n.Piece=i,t=function(){function n(n){this.score=0,this.delay=500,this.blockSize=15,this.numColumns=10,this.numRows=27,this.grid=new Array(this.numRows);for(var t=0;t<this.numRows;t++)this.grid[t]=new Array(this.numColumns);this.currentBlock=i.next_piece(this),this.game=n}return n.prototype.game_over=function(){return!1},n.prototype.emptyAt=function(){},n.prototype.run=function(){var n=this.currentBlock.dropByOne();!n,this.draw()},n.prototype.move_left=function(){!this.game_over()&&this.game.isRunning&&this.currentBlock.move(-1,0,0),this.draw()},n.prototype.move_right=function(){!this.game_over()&&this.game.isRunning&&this.currentBlock.move(1,0,0),this.draw()},n.prototype.rotate_clockwise=function(){!this.game_over()&&this.game.isRunning&&this.currentBlock.move(0,0,1),this.draw()},n.prototype.rotate_counter_clockwise=function(){!this.game_over()&&this.game.isRunning&&this.currentBlock.move(0,0,-1),this.draw()},n.prototype.storeCurrent=function(){},n.prototype.draw=function(){this.current_pos=this.game.draw_piece(this.currentBlock,this.current_pos)},n}(),n.Board=t,r=function(){function n(){this.root=new Graphics.TetrisRoot,this.ticker=new Graphics.TetrisTimer,this.canvas=new Graphics.TetrisCanvas,this.ticker.setCallback(this),this.board=new t(this),this.isRunning=!0,this.keyBindings()}return n.prototype.keyBindings=function(){var n=this;this.root.bind(37,function(){n.board.move_left}),this.root.bind(39,function(){n.board.move_right}),this.root.bind(38,function(){n.board.rotate_clockwise}),this.root.bind(40,function(){n.board.rotate_counter_clockwise})},n.prototype.tick=function(){this.isRunning&&this.board.run()},n.prototype.draw_piece=function(n,t){var f,i,u;if(t!=null&&n.moved)for(i=0;i<t.length;i++)f=t[i],f.remove();var r=this.board.blockSize,e=n.current_rotation(),o=n.base_position,s=[];for(i=0;i<e.length;i++)u=e[i],s.push(new Graphics.TetrisRect(this.canvas,o[0]*r+u[0]*r+3,o[1]*r+u[1]*r,50,50,n.color));return s},n}(),n.Tetris=r}(Game||(Game={})),g=new Game.Tetris